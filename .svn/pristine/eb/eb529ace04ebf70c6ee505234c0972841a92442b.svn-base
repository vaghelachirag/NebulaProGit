package com.nebulacompanies.ibo.activities;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.PorterDuff;
import android.graphics.Typeface;
import android.graphics.drawable.LayerDrawable;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.ImageView;

import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.bumptech.glide.request.animation.GlideAnimation;
import com.bumptech.glide.request.target.SimpleTarget;
import com.fuzzproductions.ratingbar.RatingBar;
import com.nebulacompanies.ibo.Network.APIClient;
import com.nebulacompanies.ibo.Network.APIInterface;
import com.nebulacompanies.ibo.R;
import com.nebulacompanies.ibo.ecom.AddAddressAcountActivity;
import com.nebulacompanies.ibo.ecom.MyAddressActivity;
import com.nebulacompanies.ibo.ecom.model.AddAddressDetail;
import com.nebulacompanies.ibo.ecom.utils.MyButtonEcom;
import com.nebulacompanies.ibo.ecom.utils.MyTextViewEcom;
import com.nebulacompanies.ibo.ecom.utils.NebulaEditTextEcom;
import com.nebulacompanies.ibo.ecom.utils.Utils;
import com.nebulacompanies.ibo.model.AddReviewDetail;
import com.nebulacompanies.ibo.sweetdialogue.SweetAlertDialog;
import com.nebulacompanies.ibo.util.Session;
import com.nebulacompanies.ibo.view.MyButton;
import com.nebulacompanies.ibo.view.MyTextView;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

import static com.nebulacompanies.ibo.util.Const.REQUEST_STATUS_CODE_SUCCESS;

public class AddReviewActivity extends AppCompatActivity {
    Session session;
    Toolbar toolbar;
    ImageView imgBackArrow;
    MyTextViewEcom tvToolbarTitle, tvProductName;
    RatingBar ratingBar;
    MyButtonEcom btnSubmitReview;
    NebulaEditTextEcom etReviewTitle, etReviewDesc;
    Intent productDescdata;
    String productName, productDesc, image, userID;
    int productId;
    APIInterface mAPIInterface;
    Utils utils = new Utils();
    String ettitle, etdesc, etrating;
    Long idProduct;
    Typeface typeface;
    ImageView imgThumb;

    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_review);
        session = new Session(this);
        Utils.darkenStatusBar(this, R.color.colorNotification);

        productDescdata = getIntent();
        if (productDescdata != null) {
            productName = productDescdata.getStringExtra("name");
            productDesc = productDescdata.getStringExtra("short");
            productId = productDescdata.getIntExtra("productId", 0);
            image = productDescdata.getStringExtra("image");
        }

        initData();
        initUI();
        initOnClick();

    }


    private void initData() {
        userID = session.getIboKeyId();
        mAPIInterface = APIClient.getClient(this).create(APIInterface.class);
    }

    @SuppressLint("ResourceAsColor")
    private void initUI() {
        toolbar = findViewById(R.id.toolbar_search);
        imgBackArrow = findViewById(R.id.img_back);

        tvToolbarTitle = toolbar.findViewById(R.id.toolbar_title1);

        tvToolbarTitle.setText("Review Product");
        ratingBar = findViewById(R.id.ratingBar);
       /* LayerDrawable stars = (LayerDrawable) ratingBar.getProgressDrawable();
        stars.getDrawable(2).setColorFilter(getResources().getColor(R.color.nebula), PorterDuff.Mode.SRC_ATOP);
        stars.getDrawable(0).setColorFilter(getResources().getColor(R.color.black), PorterDuff.Mode.SRC_ATOP);
        stars.getDrawable(1).setColorFilter(getResources().getColor(R.color.nebula), PorterDuff.Mode.SRC_ATOP);*/
        ratingBar.setRating(0);


        tvProductName = findViewById(R.id.name);
        etReviewTitle = findViewById(R.id.simpleEditTexttitle);
        etReviewDesc = findViewById(R.id.simpleEditTextdesc);
        btnSubmitReview = findViewById(R.id.button_submit);
        imgThumb = findViewById(R.id.thumbnail);

        tvProductName.setText(productName + "\n" + productDesc);
        idProduct = Long.valueOf(productId);

        Log.d("image", " : " + image);
        Glide
                .with(getApplicationContext())
                .load(image)
                .asBitmap()
                .diskCacheStrategy(DiskCacheStrategy.SOURCE)
                .dontAnimate()
                .placeholder(R.drawable.ic_shopping_cart)
                .into(imgThumb);
    }

    private void initOnClick() {

        btnSubmitReview.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                if (validate()) {
                    addReviewDetails();
                }
            }
        });

        imgBackArrow.setOnClickListener(view -> {
        hideKeyboard();
            Intent backIntent = new Intent();
            setResult(RESULT_CANCELED, backIntent);
            onBackPressed();
        });
    }

    public void hideKeyboard() {
        View view = this.getCurrentFocus();
        if (view != null) {
            InputMethodManager manager
                    = (InputMethodManager)
                    getSystemService(
                            Context.INPUT_METHOD_SERVICE);
            manager.hideSoftInputFromWindow(
                    view.getWindowToken(), 0);
        }
    }

    private boolean validate() {
        boolean ret1 = true;
        ettitle = etReviewTitle.getText().toString().trim();
        etdesc = etReviewDesc.getText().toString().trim();
        etrating = String.valueOf(ratingBar.getRating());
        if (TextUtils.isEmpty(ettitle)) {
            etReviewTitle.setError("Please Enter Review Title");
            ret1 = false;
        }
        if (TextUtils.isEmpty(etdesc)) {
            etReviewDesc.setError("Please Enter Review Description");
            ret1 = false;
        }
        if (TextUtils.isEmpty(etrating)) {
            Toast.makeText(this, "Please add review", Toast.LENGTH_SHORT).show();
            ret1 = false;
        }
        if (etrating.equals("0.0")) {
            Log.d("rate", "" + etrating);
// Toast.makeText(this, "Please Add Ratings", Toast.LENGTH_SHORT).show();
            ratingBar.setRating(5);
            etrating = String.valueOf(5.0);

        }
        return ret1;
    }

    private void addReviewDetails() {
        if (Utils.isNetworkAvailable(getApplicationContext())) {

            Call<AddReviewDetail> wsCallingAddAddress = mAPIInterface.addReview(idProduct, userID, ettitle, etdesc, etrating);
            wsCallingAddAddress.enqueue(new Callback<AddReviewDetail>() {
                @Override
                public void onResponse(Call<AddReviewDetail> call, Response<AddReviewDetail> response) {
                    if (response.isSuccessful()) {
                        Log.d("Response Address Start", "Response Address Start " + response.body().getMessage());
                        /*if (mProgressDialog != null) {
                            mProgressDialog.setVisibility(View.GONE);
                        }*/
                        if (response.code() == 200) {
                            Log.d("Response Address 200", "Response Address 200 " + response.body().getMessage());
                            if (response.body().getStatusCode() == REQUEST_STATUS_CODE_SUCCESS) {
                                Log.d("Response Address Suc", "Response Address Success " + response.body().getMessage());

                                //  Toast.makeText(AddReviewActivity.this, "Successfully added review", Toast.LENGTH_SHORT).show();
                                SweetAlertDialog loading = new SweetAlertDialog(AddReviewActivity.this, SweetAlertDialog.SUCCESS_TYPE);
                                loading.setCancelable(true);
                                loading.setConfirmText("OK");
                                loading.setOnShowListener(new DialogInterface.OnShowListener() {
                                    @Override
                                    public void onShow(DialogInterface dialog) {
                                        SweetAlertDialog alertDialog = (SweetAlertDialog) dialog;
                                        MyTextView textTitle = (MyTextView) alertDialog.findViewById(R.id.title_text);
                                        MyTextView textContent = (MyTextView) alertDialog.findViewById(R.id.content_text);
                                        MyButton btnConfirm = (MyButton) alertDialog.findViewById(R.id.confirm_button);
                                        textTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 15);
                                        textContent.setTextSize(TypedValue.COMPLEX_UNIT_SP, 12);
                                        // btnConfirm.setTextSize(TypedValue.COMPLEX_UNIT_SP, 13);
                                        textContent.setTypeface(typeface);
                                        textTitle.setTypeface(typeface);
                                        btnConfirm.setTypeface(typeface);
                                        alertDialog.setCancelable(false);
                                        textTitle.setText(response.body().getMessage());
                                        textTitle.setText("Your Review Added Successfully ");
                                        btnConfirm.setText("OK");
                                        // textContent.setText("Pin you have entered is Invalid.");
                                        textContent.setGravity(Gravity.NO_GRAVITY);
                                        btnConfirm.setOnClickListener(new View.OnClickListener() {
                                            @Override
                                            public void onClick(View v) {
                                                Intent backIntent = new Intent();
                                                setResult(RESULT_OK, backIntent);
                                                loading.dismiss();
                                                finish();
                                            }
                                        });
                                    }
                                });
                                loading.show();
                            }
                        }
                    }
                }

                @Override
                public void onFailure(Call<AddReviewDetail> call, Throwable t) {
                    //  mProgressDialog.setVisibility(View.GONE);
                    Log.d("Response Address Error", "Response Address Error " + t);
                }
            });
        } else {
            utils.dialogueNoInternet(this);
        }
    }

}
